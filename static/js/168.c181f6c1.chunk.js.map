{"version":3,"file":"static/js/168.c181f6c1.chunk.js","mappings":"oSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAASM,IAAT,8BAAoCG,IAD5B,uBACvBF,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAW,mCAAG,WAAMD,GAAN,yFACFX,EAASM,IAAT,iBAAuBK,EAAvB,aADE,uBACjBJ,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,qIC5B5B,GAAiB,E,SC8CjB,EAxCgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBN,GAAa,GAFI,UAGEL,EAAAA,EAAAA,GAAgBQ,GAHlB,OAGXd,EAHW,OAIjBS,EAAWT,EAAKkB,SAJC,gDAMjBC,QAAQC,IAAI,KAASpB,KAAKqB,SAC1BR,EAAS,KAASb,KAAKqB,SAPN,yBASjBV,GAAa,GATI,4EAAH,qDAalBM,GACD,GAAE,CAACN,EAAcG,KAEhB,iBAAKQ,UAAWC,EAAAA,KAAhB,UACGb,IAAa,sCACbE,IAAS,8FACTY,QAAQhB,EAAQiB,UACf,wBACGjB,EAAQkB,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOvB,GADC,QAU5B,C","sources":["api/movies-api.js","components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'aee404d75c4c2c296f37b55a19cb21fa',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesBySearch = async search => {\n  const { data } = await instance.get(`/search/movie?query=${search}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviewstById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviewstById } from 'api/movies-api';\n\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getReviewstById(movieId);\n        setReviews(data.results);\n      } catch (response) {\n        console.log(response.data.message);\n        setError(response.data.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [setIsLoading, movieId]);\n  return (\n    <div className={styles.cast}>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>ðŸ˜¥ Something went wrong... Please, reload and try again!</p>}\n      {Boolean(reviews.length) && (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>{review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getMoviesBySearch","search","getMovieById","id","getCastById","getReviewstById","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchReviews","results","console","log","message","className","styles","Boolean","length","map","review","author","content"],"sourceRoot":""}