{"version":3,"file":"static/js/42.7249c01f.chunk.js","mappings":"mSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAKTC,QAAS,CACPC,cACE,gOAIOC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAASM,IAAT,8BAAoCG,IAD5B,uBACvBF,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAW,mCAAG,WAAMD,GAAN,yFACFX,EAASM,IAAT,iBAAuBK,EAAvB,aADE,uBACjBJ,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,qJCjC5B,EAA+B,uCAA/B,EAAkF,oCAAlF,EAA+H,iCAA/H,EAA8K,sCAA9K,EAAqO,yCAArO,EAA+R,yCAA/R,EAAmV,mC,SCgHnV,EAjGyB,WAAO,IAAD,IAC7B,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IAkBrC,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfT,GAAa,GAFE,UAGIR,EAAAA,EAAAA,IAAaW,GAHjB,OAGTd,EAHS,OAIfS,EAAST,GAJM,gDAMfa,EAAS,KAASb,KAAKqB,SANR,yBAQfV,GAAa,GARE,4EAAH,qDAYhBS,GACD,GAAE,CAACT,EAAcG,KAGhB,iBAAKQ,UAAWC,EAAhB,UACGb,IAAa,sCACbE,IAAS,8FACTJ,IACC,iCACE,SAAC,KAAD,CAAMc,UAAWC,EAAiBC,GAAIR,EAAtC,sBAIA,iBAAKM,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXE,IACEjB,EAAMkB,YAAN,0CACuClB,EAAMkB,aACzCC,EAENC,IAAKpB,EAAMqB,SAEb,iBAAKP,UAAWC,EAAhB,WACE,0BACGf,EAAMqB,MADT,KACkBrB,EAAMsB,aAAaC,MAAM,EAAG,GAD9C,QAGA,uCAEGvB,EAAMwB,cAAN,WACKC,KAAKC,MAA2B,GAArB1B,EAAMwB,cADtB,SAGH,sCACA,uBAAIxB,EAAM2B,YACV,oCACA,iCACG3B,EAAM4B,cADT,aACG,EACGC,QAAO,SAACC,EAAD,OAAQC,EAAR,EAAQA,KAAR,gBAAsBD,EAAtB,aAA8BC,EAA9B,GAAsC,IAC9CR,MAAM,YAIf,iBAAKT,UAAWC,EAAhB,WACE,mDACA,2BACE,yBACE,SAAC,KAAD,CACEC,GAAI,OACJF,UAAWC,EACXL,MAAO,CAAEF,KAAAA,GAHX,qBAQF,yBACE,SAAC,KAAD,CACEQ,GAAI,UACJF,UAAWC,EACXL,MAAO,CAAEF,KAAAA,GAHX,iCAYV,SAAC,EAAAwB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/movies-api.js","webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  // params: {\n  //   api_key: 'aee404d75c4c2c296f37b55a19cb21fa',\n  // },\n\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZWU0MDRkNzVjNGMyYzI5NmYzN2I1NWExOWNiMjFmYSIsInN1YiI6IjY0ZTdmNGZmOTBlYTRiMDBlNDlkNGUxNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mTc_JNv7EEKXndt1mt3DwFo9CGeoGeDv2NGXGU5Ue3k',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesBySearch = async search => {\n  const { data } = await instance.get(`/search/movie?query=${search}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviewstById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetailsPage_movieDetails__G-i+L\",\"movieCard\":\"MovieDetailsPage_movieCard__BMoxK\",\"poster\":\"MovieDetailsPage_poster__rJd-l\",\"description\":\"MovieDetailsPage_description__JSzNh\",\"additionalInfo\":\"MovieDetailsPage_additionalInfo__MR4+w\",\"additionalLink\":\"MovieDetailsPage_additionalLink__OUe66\",\"backLink\":\"MovieDetailsPage_backLink__PEgid\"};","import { useState, useEffect, Suspense } from 'react';\n\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\n\nimport { getMovieById } from 'api/movies-api';\n\nimport fotoDefault from 'components/photoDefault.avif';\n\nimport styles from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      } catch (response) {\n        setError(response.data.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [setIsLoading, movieId]);\n\n  return (\n    <div className={styles.movieDetails}>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>ðŸ˜¥ Something went wrong... Please, reload and try again!</p>}\n      {movie && (\n        <>\n          <Link className={styles.backLink} to={from}>\n            Go back\n          </Link>\n\n          <div className={styles.movieCard}>\n            <img\n              className={styles.poster}\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                  : fotoDefault\n              }\n              alt={movie.title}\n            />\n            <div className={styles.description}>\n              <h2>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </h2>\n              <p>\n                User Score:\n                {movie.vote_average &&\n                  ` ${Math.trunc(movie.vote_average * 10)}%`}\n              </p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {movie.genres\n                  ?.reduce((acc, { name }) => `${acc}, ${name}`, '')\n                  .slice(2)}\n              </p>\n            </div>\n          </div>\n          <div className={styles.additionalInfo}>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <NavLink\n                  to={'cast'}\n                  className={styles.additionalLink}\n                  state={{ from }}\n                >\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={'reviews'}\n                  className={styles.additionalLink}\n                  state={{ from }}\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["instance","axios","baseURL","headers","Authorization","getTrendingMovies","get","data","getMoviesBySearch","search","getMovieById","id","getCastById","getReviewstById","useState","movie","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","from","useLocation","state","useEffect","fetchMovie","message","className","styles","to","src","poster_path","fotoDefault","alt","title","release_date","slice","vote_average","Math","trunc","overview","genres","reduce","acc","name","Suspense","fallback"],"sourceRoot":""}