{"version":3,"file":"static/js/999.8cfc95ae.chunk.js","mappings":"oSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAASM,IAAT,8BAAoCG,IAD5B,uBACvBF,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAW,mCAAG,WAAMD,GAAN,yFACFX,EAASM,IAAT,iBAAuBK,EAAvB,aADE,uBACjBJ,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,2EC5B5B,EAA4B,6BAA5B,EAAiE,yB,SCyBjE,EApBkB,SAAC,GAAc,IAAZO,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAKK,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAP,OACR,yBACE,SAAC,KAAD,CACEH,UAAWC,EACXG,GAAE,kBAAaV,GACfW,MAAO,CAAEC,KAAMR,GAHjB,SAKGK,KANIT,EADD,KAaf,C,4HCvBD,EAAwB,0BAAxB,EAA8D,8B,SC0B9D,EAvBmB,SAAC,GAAkB,IAAhBa,EAAe,EAAfA,SAQpB,OACE,kBAAMA,SARa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfJ,EAASG,EAAKlB,OAAOoB,OACrBF,EAAKG,OACN,EAGC,WACE,kBACEb,UAAWC,EACXa,KAAK,SACLC,KAAK,OACLC,YAAY,uBAEd,mBAAQhB,UAAWC,EAAkBc,KAAK,SAA1C,sBAKL,E,iBCxBD,EAAyB,2BCoDzB,EA3CmB,WACjB,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAapC,IAAI,WAErCuC,EAAAA,EAAAA,YAAU,WACR,GAAKD,EAAL,CAIA,IAAME,EAAiB,mCAAG,oGAEtBR,GAAa,GAFS,UAGH9B,EAAAA,EAAAA,IAAkBoC,GAHf,OAGhBrC,EAHgB,OAItB6B,EAAS7B,EAAKwC,SAJQ,gDAMtBC,QAAQC,IAAI,KAAS1C,KAAK2C,SAC1BV,EAAS,KAASjC,KAAK2C,SAPD,yBAStBZ,GAAa,GATS,4EAAH,qDAavBQ,GAfC,CAgBF,GAAE,CAACF,IAOJ,OACE,iBAAK3B,UAAWC,EAAhB,WACE,SAAC,EAAD,CAAYM,SAPC,SAAA2B,GACfR,EAAgB,CAAElC,OAAQ0C,IAC1Bf,EAAS,GACV,IAKIC,IAAa,sCACbe,QAAQjB,EAAMkB,UAAW,SAACC,EAAA,EAAD,CAAWxC,KAAMqB,IAC1CI,IAAS,gGAGf,C","sources":["api/movies-api.js","webpack://react-homework-template/./src/components/movieList/MovieList.module.css?db32","components/movieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'aee404d75c4c2c296f37b55a19cb21fa',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesBySearch = async search => {\n  const { data } = await instance.get(`/search/movie?query=${search}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviewstById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__P2D1V\",\"movie\":\"MovieList_movie__W4RdH\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ list }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={styles.movieList}>\n      {list.map(({ id, title }) => (\n        <li key={id}>\n          <Link\n            className={styles.movie}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchForm_input__HOxJo\",\"searchBtn\":\"SearchForm_searchBtn__rp2a7\"};","import PropTypes from 'prop-types';\n\nimport styles from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    onSubmit(form.search.value);\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={onSubmitForm}>\n      <input\n        className={styles.input}\n        name=\"search\"\n        type=\"text\"\n        placeholder=\"Enter movie title\"\n      />\n      <button className={styles.searchBtn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"MoviesPage_movies__IkPVC\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/movieList/MovieList';\n\nimport { getMoviesBySearch } from 'api/movies-api';\n\nimport styles from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const fetchListsBySeach = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMoviesBySearch(searchQuery);\n        setItems(data.results);\n      } catch (response) {\n        console.log(response.data.message);\n        setError(response.data.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchListsBySeach();\n  }, [searchQuery]);\n\n  const onSubmit = searchValue => {\n    setSearchParams({ search: searchValue });\n    setItems([]);\n  };\n\n  return (\n    <div className={styles.movies}>\n      <SearchForm onSubmit={onSubmit} />\n      {isLoading && <p>Loading...</p>}\n      {Boolean(items.length) && <MovieList list={items} />}\n      {error && <p>ðŸ˜¥ Something went wrong... Please, reload and try again!</p>}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getMoviesBySearch","search","getMovieById","id","getCastById","getReviewstById","list","location","useLocation","className","styles","map","title","to","state","from","onSubmit","e","preventDefault","form","currentTarget","value","reset","name","type","placeholder","useState","items","setItems","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","useEffect","fetchListsBySeach","results","console","log","message","searchValue","Boolean","length","MovieList"],"sourceRoot":""}