{"version":3,"file":"static/js/674.b41d929f.chunk.js","mappings":"oSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAASM,IAAT,8BAAoCG,IAD5B,uBACvBF,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAW,mCAAG,WAAMD,GAAN,yFACFX,EAASM,IAAT,iBAAuBK,EAAvB,aADE,uBACjBJ,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,2EC5B5B,EAA4B,6BAA5B,EAAiE,yB,SCyBjE,EApBkB,SAAC,GAAc,IAAZO,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAKK,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAP,OACR,yBACE,SAAC,KAAD,CACEH,UAAWC,EACXG,GAAE,kBAAaV,GACfW,MAAO,CAAEC,KAAMR,GAHjB,SAKGK,KANIT,EADD,KAaf,C,qICvBD,EAAuB,uB,SCuCvB,EAhCiB,WACf,OAA0Ba,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfJ,GAAa,GAFE,UAGIvB,EAAAA,EAAAA,MAHJ,OAGTE,EAHS,OAIfmB,EAASnB,EAAK0B,SAJC,gDAMfC,QAAQC,IAAI,KAAS5B,KAAK6B,SAC1BN,EAAS,KAASvB,KAAK6B,SAPR,yBASfR,GAAa,GATE,4EAAH,qDAahBI,GACD,GAAE,CAACJ,KAGF,iBAAKX,UAAWC,EAAhB,WACE,2CACCS,IAAa,sCACbU,QAAQZ,EAAMa,UAAW,SAACC,EAAA,EAAD,CAAWzB,KAAMW,IAC1CI,IAAS,gGAGf,C","sources":["api/movies-api.js","webpack://react-homework-template/./src/components/movieList/MovieList.module.css?db32","components/movieList/MovieList.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'aee404d75c4c2c296f37b55a19cb21fa',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesBySearch = async search => {\n  const { data } = await instance.get(`/search/movie?query=${search}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviewstById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__P2D1V\",\"movie\":\"MovieList_movie__W4RdH\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ list }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={styles.movieList}>\n      {list.map(({ id, title }) => (\n        <li key={id}>\n          <Link\n            className={styles.movie}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"HomePage_home__N+EMb\"};","import { useState, useEffect } from 'react';\n\nimport MovieList from 'components/movieList/MovieList';\n\nimport { getTrendingMovies } from 'api/movies-api';\n\nimport styles from './HomePage.module.css';\n\nconst HomePage = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchLists = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getTrendingMovies();\n        setItems(data.results);\n      } catch (response) {\n        console.log(response.data.message);\n        setError(response.data.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchLists();\n  }, [setIsLoading]);\n\n  return (\n    <div className={styles.home}>\n      <h2>Trending Today</h2>\n      {isLoading && <p>Loading...</p>}\n      {Boolean(items.length) && <MovieList list={items} />}\n      {error && <p>ðŸ˜¥ Something went wrong... Please, reload and try again!</p>}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getMoviesBySearch","search","getMovieById","id","getCastById","getReviewstById","list","location","useLocation","className","styles","map","title","to","state","from","useState","items","setItems","isLoading","setIsLoading","error","setError","useEffect","fetchLists","results","console","log","message","Boolean","length","MovieList"],"sourceRoot":""}