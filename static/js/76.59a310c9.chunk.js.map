{"version":3,"file":"static/js/76.59a310c9.chunk.js","mappings":"mSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAKTC,QAAS,CACPC,cACE,gOAIOC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAASM,IAAT,8BAAoCG,IAD5B,uBACvBF,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAW,mCAAG,WAAMD,GAAN,yFACFX,EAASM,IAAT,iBAAuBK,EAAvB,aADE,uBACjBJ,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,6ICjC5B,GAAgB,UAAY,yB,SCyD5B,EAjDa,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdN,GAAa,GAFC,UAGKN,EAAAA,EAAAA,IAAYS,GAHjB,OAGRd,EAHQ,OAIdS,EAAUT,EAAKkB,MAJD,gDAMdC,QAAQC,IAAI,KAASpB,KAAKqB,SAC1BR,EAAS,KAASb,KAAKqB,SAPT,yBASdV,GAAa,GATC,4EAAH,qDAafM,GACD,GAAE,CAACN,EAAcG,KAGhB,iBAAKQ,UAAWC,EAAAA,KAAhB,UACGb,IAAa,sCACbE,IAAS,8FACTY,QAAQhB,EAAOiB,UACd,wBACGjB,EAAOkB,KAAI,SAAAC,GAAK,OACf,2BACE,gBACEL,UAAWC,EAAAA,UACXK,IACED,EAAME,aAAN,0CACuCF,EAAME,cACzCC,EAENC,IAAKJ,EAAMK,QAEb,uBAAIL,EAAMK,SAVHL,EAAMvB,GADA,QAkB1B,C","sources":["api/movies-api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  // params: {\n  //   api_key: 'aee404d75c4c2c296f37b55a19cb21fa',\n  // },\n\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZWU0MDRkNzVjNGMyYzI5NmYzN2I1NWExOWNiMjFmYSIsInN1YiI6IjY0ZTdmNGZmOTBlYTRiMDBlNDlkNGUxNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mTc_JNv7EEKXndt1mt3DwFo9CGeoGeDv2NGXGU5Ue3k',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesBySearch = async search => {\n  const { data } = await instance.get(`/search/movie?query=${search}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviewstById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"actorFoto\":\"Cast_actorFoto__KD3kq\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCastById } from 'api/movies-api';\n\nimport fotoDefault from 'components/photoDefault.avif';\n\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getCastById(movieId);\n        setActors(data.cast);\n      } catch (response) {\n        console.log(response.data.message);\n        setError(response.data.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [setIsLoading, movieId]);\n\n  return (\n    <div className={styles.cast}>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>ðŸ˜¥ Something went wrong... Please, reload and try again!</p>}\n      {Boolean(actors.length) && (\n        <ul>\n          {actors.map(actor => (\n            <li key={actor.id}>\n              <img\n                className={styles.actorFoto}\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                    : fotoDefault\n                }\n                alt={actor.name}\n              />\n              <p>{actor.name}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","headers","Authorization","getTrendingMovies","get","data","getMoviesBySearch","search","getMovieById","id","getCastById","getReviewstById","useState","actors","setActors","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchCast","cast","console","log","message","className","styles","Boolean","length","map","actor","src","profile_path","fotoDefault","alt","name"],"sourceRoot":""}